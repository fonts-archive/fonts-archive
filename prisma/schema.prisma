generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model fonts {
  code            Int            @id @default(autoincrement())
  name            String
  lang            String
  date            String
  view            Int            @default(0)
  like            Int            @default(0)
  font_family     String
  font_type       String
  font_weight     String
  source          String
  source_link     String
  github_link     String
  cdn_css         String
  cdn_link        String
  cdn_import      String
  cdn_font_face   String         @db.Text
  cdn_url         String
  license_print   String
  license_web     String
  license_video   String
  license_package String
  license_embed   String
  license_bici    String
  license_ofl     String
  license_purpose String
  license_source  String
  license         String         @db.Text
  created_at      DateTime       @default(now())
  updated_at      DateTime       @default(now()) @updatedAt
  show_type       Boolean        @default(false)
  liked_user      fontsLiked[]
  comments        fontsComment[]

  @@index([code])
}

model fontsUser {
  user_no            Int            @id @default(autoincrement())
  user_name          String
  user_id            String
  user_pw            String
  auth               String         @default("")
  user_email_token   String
  user_email_confirm Boolean
  profile_img        String         @db.Text
  public_img         String         @default("")
  protected          Boolean        @default(true)
  nickname_reported  Int            @default(0)
  created_at         DateTime       @default(now())
  updated_at         DateTime       @default(now()) @updatedAt
  liked_fonts        fontsLiked[]
  comments           fontsComment[]
  reports            fontsUserReport[]
  alerts             fontsAlert[]

  @@index([user_no])
  @@index([user_id])
}

model fontsLiked {
  font_id    Int
  user_id    Int
  user_email String    @default("")
  user_auth  String    @default("")
  font       fonts     @relation(fields: [font_id], references: [code])
  user       fontsUser @relation(fields: [user_id], references: [user_no])

  @@id([font_id, user_id])
  @@index([font_id])
  @@index([user_id])
}

model fontsComment {
  font_id               Int
  font_name             String    @default("")
  font_family           String    @default("")
  user_id               Int
  user_name             String    @default("")
  user_email            String    @default("")
  user_auth             String    @default("")
  user_image            String    @default("")
  user_privacy          Boolean   @default(true)
  comment               String    @db.Text
  depth                 Int
  bundle_id             Int
  bundle_order          Int
  reported_politics     Int       @default(0)
  reported_swearing     Int       @default(0)
  reported_etc          Int       @default(0)
  is_deleted            Boolean   @default(false)
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  comment_id            Int       @id @default(autoincrement())
  deleted_at            DateTime  @default(now())
  is_deleted_with_reply Boolean   @default(false)
  is_deleted_by_reports Boolean   @default(false)
  font                  fonts     @relation(fields: [font_id], references: [code])
  user                  fontsUser @relation(fields: [user_id], references: [user_no])
  reports               fontsUserReport[]
  alerts                fontsAlert[]

  @@index([font_id])
  @@index([user_id])
  @@index([comment_id])
}

model fontsUserReport {
  report_id         Int          @id @default(autoincrement())
  report_font_code  Int          @default(0)
  report_user_id    Int
  reported_user_id  Int          @default(0)
  comment_id        Int
  report_nickname   Boolean      @default(false)
  report_politics   Boolean      @default(false)
  report_swearing   Boolean      @default(false)
  report_etc        Boolean      @default(false)
  report_text       String       @db.Text
  created_at        DateTime     @default(now())
  updated_at        DateTime     @default(now()) @updatedAt
  user              fontsUser    @relation(fields: [report_user_id], references: [user_no])
  comment           fontsComment @relation(fields: [comment_id], references: [comment_id])

  @@index([report_id])
  @@index([report_user_id])
  @@index([comment_id])
}

model fontsIssue {
  issue_id          Int      @id @default(autoincrement())
  issue_title       String
  issue_email       String
  issue_content     String   @db.Text
  issue_reply       String   @db.Text
  issue_type        String   @default("")
  issue_img_length  Int      @default(0)
  issue_img_1       String
  issue_img_2       String
  issue_img_3       String
  issue_img_4       String
  issue_img_5       String
  issue_closed      Boolean  @default(false)
  issue_closed_type String
  issue_closed_at   DateTime @default(now())
  issue_created_at  DateTime @default(now())

  @@index([issue_id])
}

model fontsNotice {
  notice_id         Int      @id @default(autoincrement())
  notice_type       String
  notice_title      String
  notice_content    String   @db.Text
  notice_show_type  Boolean  @default(false)
  notice_created_at DateTime @default(now())
  notice_updated_at DateTime @default(now()) @updatedAt

  @@index([notice_id])
}

model fontsAlert {
  alert_id       Int          @id @default(autoincrement())
  alert_type     String       @default("")
  alert_read     Boolean      @default(false)
  alert_page     String       @default("")
  alert_link     String       @default("")
  sender_name    String       @default("")
  sender_img     String       @default("")
  sender_content String       @default("")
  recipent_email String       @default("")
  recipent_auth  String       @default("")
  created_at     DateTime     @default(now())
  comment_id     Int
  user_no        Int
  comments       fontsComment @relation(fields: [comment_id], references: [comment_id])
  user           fontsUser    @relation(fields: [user_no], references: [user_no])

  @@index([alert_id])
  @@index([comment_id])
  @@index([user_no])
}